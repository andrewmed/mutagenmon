// Code generated by protoc-gen-go. DO NOT EDIT.
// source: synchronization/rsync/transmission.proto

package rsync

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Transmission represents a single message in a transmission stream. Its
// internals are public to allow for transmission using a reflection-based
// encoder (such as gob), but it should otherwise be treated as an opaque type
// with a private implementation.
type Transmission struct {
	// Done indicates that the operation stream for the current file is
	// finished. If set, there will be no operation in the response, but there
	// may be an error.
	Done bool `protobuf:"varint,1,opt,name=done,proto3" json:"done,omitempty"`
	// Operation is the next operation in the stream for the current file.
	Operation *Operation `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	// Error indicates that a non-terminal error has occurred. It will only be
	// present if Done is true.
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transmission) Reset()         { *m = Transmission{} }
func (m *Transmission) String() string { return proto.CompactTextString(m) }
func (*Transmission) ProtoMessage()    {}
func (*Transmission) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6b225c7a41dab31, []int{0}
}

func (m *Transmission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transmission.Unmarshal(m, b)
}
func (m *Transmission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transmission.Marshal(b, m, deterministic)
}
func (m *Transmission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transmission.Merge(m, src)
}
func (m *Transmission) XXX_Size() int {
	return xxx_messageInfo_Transmission.Size(m)
}
func (m *Transmission) XXX_DiscardUnknown() {
	xxx_messageInfo_Transmission.DiscardUnknown(m)
}

var xxx_messageInfo_Transmission proto.InternalMessageInfo

func (m *Transmission) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *Transmission) GetOperation() *Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *Transmission) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*Transmission)(nil), "rsync.Transmission")
}

func init() {
	proto.RegisterFile("synchronization/rsync/transmission.proto", fileDescriptor_c6b225c7a41dab31)
}

var fileDescriptor_c6b225c7a41dab31 = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x28, 0xae, 0xcc, 0x4b,
	0xce, 0x28, 0xca, 0xcf, 0xcb, 0xac, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2f, 0x02, 0x09, 0xe8,
	0x97, 0x14, 0x25, 0xe6, 0x15, 0xe7, 0x66, 0x16, 0x17, 0x67, 0xe6, 0xe7, 0xe9, 0x15, 0x14, 0xe5,
	0x97, 0xe4, 0x0b, 0xb1, 0x82, 0x65, 0xa4, 0x94, 0xb0, 0x6b, 0x48, 0xcd, 0x4b, 0xcf, 0xcc, 0x4b,
	0x85, 0x28, 0x55, 0xca, 0xe0, 0xe2, 0x09, 0x41, 0x32, 0x40, 0x48, 0x88, 0x8b, 0x25, 0x25, 0x3f,
	0x2f, 0x55, 0x82, 0x51, 0x81, 0x51, 0x83, 0x23, 0x08, 0xcc, 0x16, 0xd2, 0xe3, 0xe2, 0xcc, 0x2f,
	0x48, 0x2d, 0x02, 0x9b, 0x21, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x6d, 0x24, 0xa0, 0x07, 0x36, 0x4b,
	0xcf, 0x1f, 0x26, 0x1e, 0x84, 0x50, 0x22, 0x24, 0xc2, 0xc5, 0x9a, 0x5a, 0x54, 0x94, 0x5f, 0x24,
	0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0xe1, 0x38, 0x59, 0x46, 0x99, 0xa7, 0x67, 0x96, 0x64,
	0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0xe7, 0x96, 0x96, 0x24, 0xa6, 0xa7, 0xe6, 0xe9, 0x66,
	0xe6, 0xc3, 0x98, 0xfa, 0x05, 0xd9, 0xe9, 0xfa, 0x58, 0x5d, 0x9c, 0xc4, 0x06, 0x76, 0xab, 0x31,
	0x20, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x64, 0x2f, 0x49, 0x02, 0x01, 0x00, 0x00,
}
