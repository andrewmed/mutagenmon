// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tunneling/state.proto

package tunneling

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Status encodes the status of a tunnel.
type Status int32

const (
	// Status_Disconnected indicates that the tunnel is disconnected.
	Status_Disconnected Status = 0
	// Status_HaltedOnUnrecoverableError indicates that the tunnel has halted
	// due to an unrecoverable error.
	Status_HaltedOnUnrecoverableError Status = 1
	// Status_Connecting indicates that the tunnel is in the process of
	// connecting.
	Status_Connecting Status = 2
	// Status_Connected indicates that the tunnel is connected.
	Status_Connected Status = 3
)

var Status_name = map[int32]string{
	0: "Disconnected",
	1: "HaltedOnUnrecoverableError",
	2: "Connecting",
	3: "Connected",
}

var Status_value = map[string]int32{
	"Disconnected":               0,
	"HaltedOnUnrecoverableError": 1,
	"Connecting":                 2,
	"Connected":                  3,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_edad0d697e01f35d, []int{0}
}

// State encodes the state of a tunnel.
type State struct {
	// Tunnel is the tunnel client specification.
	Tunnel *Tunnel `protobuf:"bytes,1,opt,name=tunnel,proto3" json:"tunnel,omitempty"`
	// Status is the status of the tunnel.
	Status Status `protobuf:"varint,2,opt,name=status,proto3,enum=tunneling.Status" json:"status,omitempty"`
	// LastError indicates the last error that occurred while connecting.
	LastError string `protobuf:"bytes,3,opt,name=lastError,proto3" json:"lastError,omitempty"`
	// ActiveSessions is the number of sessions currently operating via the
	// tunnel.
	ActiveSessions uint64 `protobuf:"varint,4,opt,name=activeSessions,proto3" json:"activeSessions,omitempty"`
	// TotalSessions is the number of total sessions that have operated via the
	// tunnel (including those that are currently operating).
	TotalSessions        uint64   `protobuf:"varint,5,opt,name=totalSessions,proto3" json:"totalSessions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_edad0d697e01f35d, []int{0}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetTunnel() *Tunnel {
	if m != nil {
		return m.Tunnel
	}
	return nil
}

func (m *State) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Disconnected
}

func (m *State) GetLastError() string {
	if m != nil {
		return m.LastError
	}
	return ""
}

func (m *State) GetActiveSessions() uint64 {
	if m != nil {
		return m.ActiveSessions
	}
	return 0
}

func (m *State) GetTotalSessions() uint64 {
	if m != nil {
		return m.TotalSessions
	}
	return 0
}

func init() {
	proto.RegisterEnum("tunneling.Status", Status_name, Status_value)
	proto.RegisterType((*State)(nil), "tunneling.State")
}

func init() { proto.RegisterFile("tunneling/state.proto", fileDescriptor_edad0d697e01f35d) }

var fileDescriptor_edad0d697e01f35d = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xdd, 0x4a, 0xc3, 0x40,
	0x10, 0x85, 0xdd, 0xfe, 0x41, 0x46, 0x5b, 0xe2, 0x82, 0x12, 0x8a, 0x48, 0x10, 0x91, 0xa8, 0x34,
	0x05, 0x7d, 0x03, 0xab, 0xe0, 0x9d, 0x90, 0xe8, 0x85, 0xde, 0x6d, 0xd2, 0x21, 0x2e, 0xa6, 0xb3,
	0x65, 0x77, 0xd2, 0x77, 0xf4, 0xad, 0x24, 0x49, 0x9b, 0x52, 0xef, 0x0e, 0xdf, 0x7c, 0x87, 0x19,
	0x06, 0xce, 0xb8, 0x22, 0xc2, 0x52, 0x53, 0x31, 0x77, 0xac, 0x18, 0xe3, 0xb5, 0x35, 0x6c, 0xa4,
	0xd7, 0xe1, 0xe9, 0xf9, 0xde, 0x68, 0x53, 0xab, 0x5c, 0xfd, 0x0a, 0x18, 0xa6, 0x75, 0x45, 0xde,
	0xc2, 0xa8, 0x9d, 0x04, 0x22, 0x14, 0xd1, 0xf1, 0xc3, 0x69, 0xdc, 0x55, 0xe2, 0xf7, 0x26, 0x25,
	0x5b, 0xa1, 0x56, 0xeb, 0x35, 0x95, 0x0b, 0x7a, 0xa1, 0x88, 0x26, 0x07, 0x6a, 0xda, 0x0c, 0x92,
	0xad, 0x20, 0x2f, 0xc0, 0x2b, 0x95, 0xe3, 0x17, 0x6b, 0x8d, 0x0d, 0xfa, 0xa1, 0x88, 0xbc, 0x64,
	0x0f, 0xe4, 0x0d, 0x4c, 0x54, 0xce, 0x7a, 0x83, 0x29, 0x3a, 0xa7, 0x0d, 0xb9, 0x60, 0x10, 0x8a,
	0x68, 0x90, 0xfc, 0xa3, 0xf2, 0x1a, 0xc6, 0x6c, 0x58, 0x95, 0x9d, 0x36, 0x6c, 0xb4, 0x43, 0x78,
	0xf7, 0x09, 0xa3, 0x76, 0xbb, 0xf4, 0xe1, 0xe4, 0x59, 0xbb, 0xdc, 0x10, 0x61, 0xce, 0xb8, 0xf4,
	0x8f, 0xe4, 0x25, 0x4c, 0x5f, 0x55, 0xc9, 0xb8, 0x7c, 0xa3, 0x0f, 0xb2, 0x98, 0x9b, 0x0d, 0x5a,
	0x95, 0x95, 0xd8, 0xdc, 0xe1, 0x0b, 0x39, 0x01, 0x58, 0xb4, 0xba, 0xa6, 0xc2, 0xef, 0xc9, 0x31,
	0x78, 0x8b, 0xae, 0xde, 0x7f, 0x9a, 0x7d, 0xdd, 0x17, 0x9a, 0xbf, 0xab, 0x2c, 0xce, 0xcd, 0x6a,
	0xbe, 0xaa, 0x58, 0x15, 0x48, 0x33, 0x6d, 0x76, 0x71, 0xbe, 0xfe, 0xd9, 0x3d, 0x56, 0x53, 0x91,
	0x8d, 0x9a, 0xe7, 0x3e, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0x97, 0x39, 0xb9, 0x15, 0x98, 0x01,
	0x00, 0x00,
}
