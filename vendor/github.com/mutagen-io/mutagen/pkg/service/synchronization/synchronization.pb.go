// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/synchronization/synchronization.proto

package synchronization

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	selection "github.com/mutagen-io/mutagen/pkg/selection"
	synchronization "github.com/mutagen-io/mutagen/pkg/synchronization"
	url "github.com/mutagen-io/mutagen/pkg/url"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreationSpecification struct {
	// Alpha is the alpha endpoint URL for the session.
	Alpha *url.URL `protobuf:"bytes,1,opt,name=alpha,proto3" json:"alpha,omitempty"`
	// Beta is the beta endpoint URL for the session.
	Beta *url.URL `protobuf:"bytes,2,opt,name=beta,proto3" json:"beta,omitempty"`
	// Configuration is the base session configuration. It is the result of
	// merging the global configuration (unless disabled), any manually
	// specified configuration file, and any command line configuration
	// parameters.
	Configuration *synchronization.Configuration `protobuf:"bytes,3,opt,name=configuration,proto3" json:"configuration,omitempty"`
	// ConfigurationAlpha is the alpha-specific session configuration. It is
	// determined based on command line configuration parameters.
	ConfigurationAlpha *synchronization.Configuration `protobuf:"bytes,4,opt,name=configurationAlpha,proto3" json:"configurationAlpha,omitempty"`
	// ConfigurationBeta is the beta-specific session configuration. It is
	// determined based on command line configuration parameters.
	ConfigurationBeta *synchronization.Configuration `protobuf:"bytes,5,opt,name=configurationBeta,proto3" json:"configurationBeta,omitempty"`
	// Name is the name for the session object.
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Labels are the labels for the session object.
	Labels map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Paused indicates whether or not to create the session pre-paused.
	Paused               bool     `protobuf:"varint,8,opt,name=paused,proto3" json:"paused,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreationSpecification) Reset()         { *m = CreationSpecification{} }
func (m *CreationSpecification) String() string { return proto.CompactTextString(m) }
func (*CreationSpecification) ProtoMessage()    {}
func (*CreationSpecification) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{0}
}

func (m *CreationSpecification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreationSpecification.Unmarshal(m, b)
}
func (m *CreationSpecification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreationSpecification.Marshal(b, m, deterministic)
}
func (m *CreationSpecification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreationSpecification.Merge(m, src)
}
func (m *CreationSpecification) XXX_Size() int {
	return xxx_messageInfo_CreationSpecification.Size(m)
}
func (m *CreationSpecification) XXX_DiscardUnknown() {
	xxx_messageInfo_CreationSpecification.DiscardUnknown(m)
}

var xxx_messageInfo_CreationSpecification proto.InternalMessageInfo

func (m *CreationSpecification) GetAlpha() *url.URL {
	if m != nil {
		return m.Alpha
	}
	return nil
}

func (m *CreationSpecification) GetBeta() *url.URL {
	if m != nil {
		return m.Beta
	}
	return nil
}

func (m *CreationSpecification) GetConfiguration() *synchronization.Configuration {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *CreationSpecification) GetConfigurationAlpha() *synchronization.Configuration {
	if m != nil {
		return m.ConfigurationAlpha
	}
	return nil
}

func (m *CreationSpecification) GetConfigurationBeta() *synchronization.Configuration {
	if m != nil {
		return m.ConfigurationBeta
	}
	return nil
}

func (m *CreationSpecification) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreationSpecification) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreationSpecification) GetPaused() bool {
	if m != nil {
		return m.Paused
	}
	return false
}

type CreateRequest struct {
	Specification        *CreationSpecification `protobuf:"bytes,1,opt,name=specification,proto3" json:"specification,omitempty"`
	Response             string                 `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{1}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetSpecification() *CreationSpecification {
	if m != nil {
		return m.Specification
	}
	return nil
}

func (m *CreateRequest) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type CreateResponse struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Prompt               string   `protobuf:"bytes,3,opt,name=prompt,proto3" json:"prompt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{2}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *CreateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateResponse) GetPrompt() string {
	if m != nil {
		return m.Prompt
	}
	return ""
}

type ListRequest struct {
	Selection            *selection.Selection `protobuf:"bytes,1,opt,name=selection,proto3" json:"selection,omitempty"`
	PreviousStateIndex   uint64               `protobuf:"varint,2,opt,name=previousStateIndex,proto3" json:"previousStateIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{3}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *ListRequest) GetPreviousStateIndex() uint64 {
	if m != nil {
		return m.PreviousStateIndex
	}
	return 0
}

type ListResponse struct {
	StateIndex           uint64                   `protobuf:"varint,1,opt,name=stateIndex,proto3" json:"stateIndex,omitempty"`
	SessionStates        []*synchronization.State `protobuf:"bytes,2,rep,name=sessionStates,proto3" json:"sessionStates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{4}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetStateIndex() uint64 {
	if m != nil {
		return m.StateIndex
	}
	return 0
}

func (m *ListResponse) GetSessionStates() []*synchronization.State {
	if m != nil {
		return m.SessionStates
	}
	return nil
}

type FlushRequest struct {
	Selection            *selection.Selection `protobuf:"bytes,1,opt,name=selection,proto3" json:"selection,omitempty"`
	SkipWait             bool                 `protobuf:"varint,2,opt,name=skipWait,proto3" json:"skipWait,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FlushRequest) Reset()         { *m = FlushRequest{} }
func (m *FlushRequest) String() string { return proto.CompactTextString(m) }
func (*FlushRequest) ProtoMessage()    {}
func (*FlushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{5}
}

func (m *FlushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushRequest.Unmarshal(m, b)
}
func (m *FlushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushRequest.Marshal(b, m, deterministic)
}
func (m *FlushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushRequest.Merge(m, src)
}
func (m *FlushRequest) XXX_Size() int {
	return xxx_messageInfo_FlushRequest.Size(m)
}
func (m *FlushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FlushRequest proto.InternalMessageInfo

func (m *FlushRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *FlushRequest) GetSkipWait() bool {
	if m != nil {
		return m.SkipWait
	}
	return false
}

type FlushResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlushResponse) Reset()         { *m = FlushResponse{} }
func (m *FlushResponse) String() string { return proto.CompactTextString(m) }
func (*FlushResponse) ProtoMessage()    {}
func (*FlushResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{6}
}

func (m *FlushResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushResponse.Unmarshal(m, b)
}
func (m *FlushResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushResponse.Marshal(b, m, deterministic)
}
func (m *FlushResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushResponse.Merge(m, src)
}
func (m *FlushResponse) XXX_Size() int {
	return xxx_messageInfo_FlushResponse.Size(m)
}
func (m *FlushResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FlushResponse proto.InternalMessageInfo

func (m *FlushResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PauseRequest struct {
	Selection            *selection.Selection `protobuf:"bytes,1,opt,name=selection,proto3" json:"selection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PauseRequest) Reset()         { *m = PauseRequest{} }
func (m *PauseRequest) String() string { return proto.CompactTextString(m) }
func (*PauseRequest) ProtoMessage()    {}
func (*PauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{7}
}

func (m *PauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseRequest.Unmarshal(m, b)
}
func (m *PauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseRequest.Marshal(b, m, deterministic)
}
func (m *PauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseRequest.Merge(m, src)
}
func (m *PauseRequest) XXX_Size() int {
	return xxx_messageInfo_PauseRequest.Size(m)
}
func (m *PauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PauseRequest proto.InternalMessageInfo

func (m *PauseRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

type PauseResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PauseResponse) Reset()         { *m = PauseResponse{} }
func (m *PauseResponse) String() string { return proto.CompactTextString(m) }
func (*PauseResponse) ProtoMessage()    {}
func (*PauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{8}
}

func (m *PauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseResponse.Unmarshal(m, b)
}
func (m *PauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseResponse.Marshal(b, m, deterministic)
}
func (m *PauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseResponse.Merge(m, src)
}
func (m *PauseResponse) XXX_Size() int {
	return xxx_messageInfo_PauseResponse.Size(m)
}
func (m *PauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PauseResponse proto.InternalMessageInfo

func (m *PauseResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ResumeRequest struct {
	Selection            *selection.Selection `protobuf:"bytes,1,opt,name=selection,proto3" json:"selection,omitempty"`
	Response             string               `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ResumeRequest) Reset()         { *m = ResumeRequest{} }
func (m *ResumeRequest) String() string { return proto.CompactTextString(m) }
func (*ResumeRequest) ProtoMessage()    {}
func (*ResumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{9}
}

func (m *ResumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeRequest.Unmarshal(m, b)
}
func (m *ResumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeRequest.Marshal(b, m, deterministic)
}
func (m *ResumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeRequest.Merge(m, src)
}
func (m *ResumeRequest) XXX_Size() int {
	return xxx_messageInfo_ResumeRequest.Size(m)
}
func (m *ResumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeRequest proto.InternalMessageInfo

func (m *ResumeRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *ResumeRequest) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type ResumeResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Prompt               string   `protobuf:"bytes,2,opt,name=prompt,proto3" json:"prompt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResumeResponse) Reset()         { *m = ResumeResponse{} }
func (m *ResumeResponse) String() string { return proto.CompactTextString(m) }
func (*ResumeResponse) ProtoMessage()    {}
func (*ResumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{10}
}

func (m *ResumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeResponse.Unmarshal(m, b)
}
func (m *ResumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeResponse.Marshal(b, m, deterministic)
}
func (m *ResumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeResponse.Merge(m, src)
}
func (m *ResumeResponse) XXX_Size() int {
	return xxx_messageInfo_ResumeResponse.Size(m)
}
func (m *ResumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeResponse proto.InternalMessageInfo

func (m *ResumeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ResumeResponse) GetPrompt() string {
	if m != nil {
		return m.Prompt
	}
	return ""
}

type ResetRequest struct {
	Selection            *selection.Selection `protobuf:"bytes,1,opt,name=selection,proto3" json:"selection,omitempty"`
	Response             string               `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ResetRequest) Reset()         { *m = ResetRequest{} }
func (m *ResetRequest) String() string { return proto.CompactTextString(m) }
func (*ResetRequest) ProtoMessage()    {}
func (*ResetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{11}
}

func (m *ResetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetRequest.Unmarshal(m, b)
}
func (m *ResetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetRequest.Marshal(b, m, deterministic)
}
func (m *ResetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetRequest.Merge(m, src)
}
func (m *ResetRequest) XXX_Size() int {
	return xxx_messageInfo_ResetRequest.Size(m)
}
func (m *ResetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetRequest proto.InternalMessageInfo

func (m *ResetRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *ResetRequest) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type ResetResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Prompt               string   `protobuf:"bytes,2,opt,name=prompt,proto3" json:"prompt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetResponse) Reset()         { *m = ResetResponse{} }
func (m *ResetResponse) String() string { return proto.CompactTextString(m) }
func (*ResetResponse) ProtoMessage()    {}
func (*ResetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{12}
}

func (m *ResetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetResponse.Unmarshal(m, b)
}
func (m *ResetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetResponse.Marshal(b, m, deterministic)
}
func (m *ResetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetResponse.Merge(m, src)
}
func (m *ResetResponse) XXX_Size() int {
	return xxx_messageInfo_ResetResponse.Size(m)
}
func (m *ResetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetResponse proto.InternalMessageInfo

func (m *ResetResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ResetResponse) GetPrompt() string {
	if m != nil {
		return m.Prompt
	}
	return ""
}

type TerminateRequest struct {
	Selection            *selection.Selection `protobuf:"bytes,1,opt,name=selection,proto3" json:"selection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TerminateRequest) Reset()         { *m = TerminateRequest{} }
func (m *TerminateRequest) String() string { return proto.CompactTextString(m) }
func (*TerminateRequest) ProtoMessage()    {}
func (*TerminateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{13}
}

func (m *TerminateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateRequest.Unmarshal(m, b)
}
func (m *TerminateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateRequest.Marshal(b, m, deterministic)
}
func (m *TerminateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateRequest.Merge(m, src)
}
func (m *TerminateRequest) XXX_Size() int {
	return xxx_messageInfo_TerminateRequest.Size(m)
}
func (m *TerminateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateRequest proto.InternalMessageInfo

func (m *TerminateRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

type TerminateResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TerminateResponse) Reset()         { *m = TerminateResponse{} }
func (m *TerminateResponse) String() string { return proto.CompactTextString(m) }
func (*TerminateResponse) ProtoMessage()    {}
func (*TerminateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{14}
}

func (m *TerminateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateResponse.Unmarshal(m, b)
}
func (m *TerminateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateResponse.Marshal(b, m, deterministic)
}
func (m *TerminateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateResponse.Merge(m, src)
}
func (m *TerminateResponse) XXX_Size() int {
	return xxx_messageInfo_TerminateResponse.Size(m)
}
func (m *TerminateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateResponse proto.InternalMessageInfo

func (m *TerminateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*CreationSpecification)(nil), "synchronization.CreationSpecification")
	proto.RegisterMapType((map[string]string)(nil), "synchronization.CreationSpecification.LabelsEntry")
	proto.RegisterType((*CreateRequest)(nil), "synchronization.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "synchronization.CreateResponse")
	proto.RegisterType((*ListRequest)(nil), "synchronization.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "synchronization.ListResponse")
	proto.RegisterType((*FlushRequest)(nil), "synchronization.FlushRequest")
	proto.RegisterType((*FlushResponse)(nil), "synchronization.FlushResponse")
	proto.RegisterType((*PauseRequest)(nil), "synchronization.PauseRequest")
	proto.RegisterType((*PauseResponse)(nil), "synchronization.PauseResponse")
	proto.RegisterType((*ResumeRequest)(nil), "synchronization.ResumeRequest")
	proto.RegisterType((*ResumeResponse)(nil), "synchronization.ResumeResponse")
	proto.RegisterType((*ResetRequest)(nil), "synchronization.ResetRequest")
	proto.RegisterType((*ResetResponse)(nil), "synchronization.ResetResponse")
	proto.RegisterType((*TerminateRequest)(nil), "synchronization.TerminateRequest")
	proto.RegisterType((*TerminateResponse)(nil), "synchronization.TerminateResponse")
}

func init() {
	proto.RegisterFile("service/synchronization/synchronization.proto", fileDescriptor_2876ddae139dc773)
}

var fileDescriptor_2876ddae139dc773 = []byte{
	// 754 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x5b, 0x6f, 0xd3, 0x4a,
	0x10, 0x3e, 0xce, 0xad, 0xc9, 0x24, 0xe9, 0x65, 0xd5, 0x53, 0xf9, 0xf8, 0x94, 0x10, 0x8c, 0x84,
	0xc2, 0x43, 0x13, 0x14, 0x5e, 0x28, 0xf0, 0xd2, 0x94, 0x56, 0x02, 0x45, 0x14, 0x6d, 0x40, 0x20,
	0x84, 0x8a, 0x9c, 0x74, 0x9a, 0x58, 0x75, 0x6c, 0xd7, 0x6b, 0x57, 0x84, 0x1f, 0xc7, 0x2f, 0xe2,
	0x47, 0x20, 0xaf, 0xbd, 0x89, 0x37, 0x76, 0x68, 0x45, 0xc4, 0xdb, 0xce, 0xed, 0x9b, 0xdb, 0x37,
	0x96, 0xe1, 0x80, 0xa1, 0x77, 0x63, 0x8e, 0xb0, 0xc3, 0x66, 0xf6, 0x68, 0xe2, 0x39, 0xb6, 0xf9,
	0xdd, 0xf0, 0x4d, 0xc7, 0x5e, 0x96, 0xdb, 0xae, 0xe7, 0xf8, 0x0e, 0xd9, 0x5a, 0x52, 0x6b, 0xff,
	0x31, 0xb4, 0x70, 0x14, 0x45, 0x88, 0x57, 0xe4, 0xab, 0x3d, 0x5c, 0x86, 0x1c, 0x39, 0xf6, 0xa5,
	0x39, 0x0e, 0xbc, 0x04, 0xa0, 0xf6, 0x7f, 0x2a, 0xaf, 0x6f, 0xf8, 0x18, 0x1b, 0xeb, 0x81, 0x67,
	0x75, 0x02, 0xcf, 0x8a, 0x44, 0xfd, 0x67, 0x1e, 0xfe, 0x3d, 0xf6, 0x90, 0xfb, 0x0d, 0x5c, 0x1c,
	0x99, 0x97, 0xe6, 0x88, 0x0b, 0xa4, 0x01, 0x45, 0xc3, 0x72, 0x27, 0x86, 0xaa, 0x34, 0x95, 0x56,
	0xb5, 0x5b, 0x6e, 0x87, 0x41, 0x1f, 0x68, 0x9f, 0x46, 0x6a, 0xb2, 0x0f, 0x85, 0x21, 0xfa, 0x86,
	0x9a, 0x5b, 0x32, 0x73, 0x2d, 0x79, 0x05, 0x75, 0xa9, 0x34, 0x35, 0xcf, 0xdd, 0x1a, 0xed, 0xe5,
	0x19, 0x1c, 0x27, 0xbd, 0xa8, 0x1c, 0x44, 0xde, 0x02, 0x91, 0x14, 0x47, 0xbc, 0xa0, 0xc2, 0x9d,
	0xa0, 0x32, 0x22, 0x49, 0x1f, 0x76, 0x24, 0x6d, 0x2f, 0x6c, 0xa0, 0x78, 0x27, 0xb8, 0x74, 0x20,
	0x21, 0x50, 0xb0, 0x8d, 0x29, 0xaa, 0xa5, 0xa6, 0xd2, 0xaa, 0x50, 0xfe, 0x26, 0x6f, 0xa0, 0x64,
	0x19, 0x43, 0xb4, 0x98, 0xba, 0xd1, 0xcc, 0xb7, 0xaa, 0xdd, 0x6e, 0x1a, 0x36, 0x6b, 0xda, 0xed,
	0x3e, 0x0f, 0x3a, 0xb1, 0x7d, 0x6f, 0x46, 0x63, 0x04, 0xb2, 0x07, 0x25, 0xd7, 0x08, 0x18, 0x5e,
	0xa8, 0xe5, 0xa6, 0xd2, 0x2a, 0xd3, 0x58, 0xd2, 0x0e, 0xa1, 0x9a, 0x70, 0x27, 0xdb, 0x90, 0xbf,
	0xc2, 0x19, 0x5f, 0x53, 0x85, 0x86, 0x4f, 0xb2, 0x0b, 0xc5, 0x1b, 0xc3, 0x0a, 0x90, 0xef, 0xa6,
	0x42, 0x23, 0xe1, 0x79, 0xee, 0x99, 0xa2, 0xcf, 0xa0, 0xce, 0xf3, 0x23, 0xc5, 0xeb, 0x00, 0x99,
	0x4f, 0xfa, 0x50, 0x67, 0xc9, 0x42, 0xe2, 0x6d, 0x3f, 0xba, 0x5b, 0xd9, 0x54, 0x0e, 0x26, 0x1a,
	0x94, 0x3d, 0x64, 0xae, 0x63, 0x33, 0x91, 0x7b, 0x2e, 0xeb, 0x5f, 0x60, 0x53, 0xa4, 0x8e, 0x34,
	0x44, 0x85, 0x0d, 0x86, 0x8c, 0x89, 0xac, 0x15, 0x2a, 0xc4, 0xd0, 0x32, 0x45, 0xc6, 0x8c, 0xb1,
	0x80, 0x11, 0x22, 0x9f, 0x89, 0xe7, 0x4c, 0x5d, 0x9f, 0x13, 0xaa, 0x42, 0x63, 0x49, 0xbf, 0x86,
	0x6a, 0xdf, 0x64, 0xbe, 0x68, 0xab, 0x0b, 0x95, 0xf9, 0xe9, 0xc4, 0x2d, 0xed, 0xb6, 0x17, 0xc7,
	0x34, 0x10, 0x2f, 0xba, 0x70, 0x23, 0x6d, 0x20, 0xae, 0x87, 0x37, 0xa6, 0x13, 0xb0, 0x41, 0x78,
	0x30, 0xaf, 0xed, 0x0b, 0xfc, 0xc6, 0xf3, 0x17, 0x68, 0x86, 0x45, 0xb7, 0xa0, 0x16, 0xa5, 0x8c,
	0xdb, 0x69, 0x00, 0xb0, 0x45, 0x9c, 0xc2, 0xe3, 0x12, 0x1a, 0xf2, 0x12, 0xea, 0x71, 0x7f, 0x1c,
	0x84, 0xa9, 0x39, 0xce, 0x90, 0xbd, 0xd4, 0xa8, 0xb9, 0x99, 0xca, 0xce, 0xfa, 0x39, 0xd4, 0x4e,
	0xad, 0x80, 0x4d, 0xd6, 0xe9, 0x50, 0x83, 0x32, 0xbb, 0x32, 0xdd, 0x8f, 0x86, 0xe9, 0xf3, 0xbe,
	0xca, 0x74, 0x2e, 0xeb, 0x8f, 0xa1, 0x1e, 0xe3, 0x2f, 0xb6, 0x23, 0x76, 0xa0, 0x48, 0x3b, 0xd0,
	0x7b, 0x50, 0x7b, 0x17, 0x32, 0x71, 0x8d, 0x52, 0xc2, 0x74, 0x31, 0xc6, 0xad, 0xe9, 0xbe, 0x42,
	0x9d, 0x22, 0x0b, 0xa6, 0xb8, 0x66, 0xeb, 0x2b, 0x99, 0xd9, 0x83, 0x4d, 0x91, 0xe0, 0xb6, 0x62,
	0x12, 0xfc, 0xcb, 0x49, 0xfc, 0x3b, 0x87, 0x1a, 0x45, 0x86, 0xfe, 0xdf, 0xaa, 0xf1, 0x88, 0x0f,
	0x01, 0xfd, 0x35, 0x4a, 0x3c, 0x85, 0xed, 0xf7, 0xe8, 0x4d, 0x4d, 0x3b, 0x71, 0xfe, 0x7f, 0xb2,
	0xba, 0x03, 0xd8, 0x49, 0xe0, 0xdc, 0x56, 0x4e, 0xf7, 0x47, 0x01, 0xb6, 0x06, 0x32, 0xc3, 0xc9,
	0x19, 0x94, 0xa2, 0x6f, 0x01, 0x69, 0x64, 0x7f, 0x68, 0x44, 0x81, 0xda, 0xfd, 0x95, 0xf6, 0x78,
	0x30, 0xff, 0xb4, 0x94, 0x27, 0x0a, 0x39, 0x81, 0x42, 0x78, 0x8b, 0x64, 0x3f, 0xe5, 0x9e, 0xf8,
	0x2a, 0x68, 0xf7, 0x56, 0x58, 0x05, 0x14, 0xe9, 0x43, 0x91, 0x1f, 0x01, 0x49, 0x7b, 0x26, 0x8f,
	0x4f, 0x6b, 0xac, 0x32, 0x4b, 0x45, 0xf5, 0xa1, 0xc8, 0x39, 0x9e, 0x81, 0x96, 0xbc, 0x9f, 0x0c,
	0x34, 0xe9, 0x34, 0x62, 0xb4, 0x33, 0x28, 0x45, 0x2c, 0xcd, 0x98, 0x99, 0x74, 0x1f, 0x19, 0x33,
	0x93, 0xe9, 0xbd, 0x28, 0x8f, 0x53, 0x2a, 0xa3, 0xbc, 0x24, 0x95, 0xb5, 0xc6, 0x2a, 0xb3, 0x84,
	0xf6, 0x09, 0x2a, 0x73, 0x56, 0x90, 0x07, 0xa9, 0x90, 0x65, 0xe6, 0x69, 0xfa, 0xef, 0x5c, 0x92,
	0xc8, 0xbd, 0x17, 0x9f, 0x0f, 0xc7, 0xa6, 0x3f, 0x09, 0x86, 0xed, 0x91, 0x33, 0xed, 0x4c, 0x03,
	0xdf, 0x18, 0xa3, 0x7d, 0x60, 0x3a, 0xe2, 0xd9, 0x71, 0xaf, 0xc6, 0x9d, 0x15, 0xbf, 0x5c, 0xc3,
	0x12, 0xff, 0xcd, 0x79, 0xfa, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xb3, 0xca, 0x6d, 0xfa, 0x94, 0x09,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SynchronizationClient is the client API for Synchronization service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SynchronizationClient interface {
	Create(ctx context.Context, opts ...grpc.CallOption) (Synchronization_CreateClient, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Flush(ctx context.Context, opts ...grpc.CallOption) (Synchronization_FlushClient, error)
	Pause(ctx context.Context, opts ...grpc.CallOption) (Synchronization_PauseClient, error)
	Resume(ctx context.Context, opts ...grpc.CallOption) (Synchronization_ResumeClient, error)
	Reset(ctx context.Context, opts ...grpc.CallOption) (Synchronization_ResetClient, error)
	Terminate(ctx context.Context, opts ...grpc.CallOption) (Synchronization_TerminateClient, error)
}

type synchronizationClient struct {
	cc grpc.ClientConnInterface
}

func NewSynchronizationClient(cc grpc.ClientConnInterface) SynchronizationClient {
	return &synchronizationClient{cc}
}

func (c *synchronizationClient) Create(ctx context.Context, opts ...grpc.CallOption) (Synchronization_CreateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Synchronization_serviceDesc.Streams[0], "/synchronization.Synchronization/Create", opts...)
	if err != nil {
		return nil, err
	}
	x := &synchronizationCreateClient{stream}
	return x, nil
}

type Synchronization_CreateClient interface {
	Send(*CreateRequest) error
	Recv() (*CreateResponse, error)
	grpc.ClientStream
}

type synchronizationCreateClient struct {
	grpc.ClientStream
}

func (x *synchronizationCreateClient) Send(m *CreateRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *synchronizationCreateClient) Recv() (*CreateResponse, error) {
	m := new(CreateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *synchronizationClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/synchronization.Synchronization/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *synchronizationClient) Flush(ctx context.Context, opts ...grpc.CallOption) (Synchronization_FlushClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Synchronization_serviceDesc.Streams[1], "/synchronization.Synchronization/Flush", opts...)
	if err != nil {
		return nil, err
	}
	x := &synchronizationFlushClient{stream}
	return x, nil
}

type Synchronization_FlushClient interface {
	Send(*FlushRequest) error
	Recv() (*FlushResponse, error)
	grpc.ClientStream
}

type synchronizationFlushClient struct {
	grpc.ClientStream
}

func (x *synchronizationFlushClient) Send(m *FlushRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *synchronizationFlushClient) Recv() (*FlushResponse, error) {
	m := new(FlushResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *synchronizationClient) Pause(ctx context.Context, opts ...grpc.CallOption) (Synchronization_PauseClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Synchronization_serviceDesc.Streams[2], "/synchronization.Synchronization/Pause", opts...)
	if err != nil {
		return nil, err
	}
	x := &synchronizationPauseClient{stream}
	return x, nil
}

type Synchronization_PauseClient interface {
	Send(*PauseRequest) error
	Recv() (*PauseResponse, error)
	grpc.ClientStream
}

type synchronizationPauseClient struct {
	grpc.ClientStream
}

func (x *synchronizationPauseClient) Send(m *PauseRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *synchronizationPauseClient) Recv() (*PauseResponse, error) {
	m := new(PauseResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *synchronizationClient) Resume(ctx context.Context, opts ...grpc.CallOption) (Synchronization_ResumeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Synchronization_serviceDesc.Streams[3], "/synchronization.Synchronization/Resume", opts...)
	if err != nil {
		return nil, err
	}
	x := &synchronizationResumeClient{stream}
	return x, nil
}

type Synchronization_ResumeClient interface {
	Send(*ResumeRequest) error
	Recv() (*ResumeResponse, error)
	grpc.ClientStream
}

type synchronizationResumeClient struct {
	grpc.ClientStream
}

func (x *synchronizationResumeClient) Send(m *ResumeRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *synchronizationResumeClient) Recv() (*ResumeResponse, error) {
	m := new(ResumeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *synchronizationClient) Reset(ctx context.Context, opts ...grpc.CallOption) (Synchronization_ResetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Synchronization_serviceDesc.Streams[4], "/synchronization.Synchronization/Reset", opts...)
	if err != nil {
		return nil, err
	}
	x := &synchronizationResetClient{stream}
	return x, nil
}

type Synchronization_ResetClient interface {
	Send(*ResetRequest) error
	Recv() (*ResetResponse, error)
	grpc.ClientStream
}

type synchronizationResetClient struct {
	grpc.ClientStream
}

func (x *synchronizationResetClient) Send(m *ResetRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *synchronizationResetClient) Recv() (*ResetResponse, error) {
	m := new(ResetResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *synchronizationClient) Terminate(ctx context.Context, opts ...grpc.CallOption) (Synchronization_TerminateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Synchronization_serviceDesc.Streams[5], "/synchronization.Synchronization/Terminate", opts...)
	if err != nil {
		return nil, err
	}
	x := &synchronizationTerminateClient{stream}
	return x, nil
}

type Synchronization_TerminateClient interface {
	Send(*TerminateRequest) error
	Recv() (*TerminateResponse, error)
	grpc.ClientStream
}

type synchronizationTerminateClient struct {
	grpc.ClientStream
}

func (x *synchronizationTerminateClient) Send(m *TerminateRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *synchronizationTerminateClient) Recv() (*TerminateResponse, error) {
	m := new(TerminateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SynchronizationServer is the server API for Synchronization service.
type SynchronizationServer interface {
	Create(Synchronization_CreateServer) error
	List(context.Context, *ListRequest) (*ListResponse, error)
	Flush(Synchronization_FlushServer) error
	Pause(Synchronization_PauseServer) error
	Resume(Synchronization_ResumeServer) error
	Reset(Synchronization_ResetServer) error
	Terminate(Synchronization_TerminateServer) error
}

// UnimplementedSynchronizationServer can be embedded to have forward compatible implementations.
type UnimplementedSynchronizationServer struct {
}

func (*UnimplementedSynchronizationServer) Create(srv Synchronization_CreateServer) error {
	return status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedSynchronizationServer) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedSynchronizationServer) Flush(srv Synchronization_FlushServer) error {
	return status.Errorf(codes.Unimplemented, "method Flush not implemented")
}
func (*UnimplementedSynchronizationServer) Pause(srv Synchronization_PauseServer) error {
	return status.Errorf(codes.Unimplemented, "method Pause not implemented")
}
func (*UnimplementedSynchronizationServer) Resume(srv Synchronization_ResumeServer) error {
	return status.Errorf(codes.Unimplemented, "method Resume not implemented")
}
func (*UnimplementedSynchronizationServer) Reset(srv Synchronization_ResetServer) error {
	return status.Errorf(codes.Unimplemented, "method Reset not implemented")
}
func (*UnimplementedSynchronizationServer) Terminate(srv Synchronization_TerminateServer) error {
	return status.Errorf(codes.Unimplemented, "method Terminate not implemented")
}

func RegisterSynchronizationServer(s *grpc.Server, srv SynchronizationServer) {
	s.RegisterService(&_Synchronization_serviceDesc, srv)
}

func _Synchronization_Create_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SynchronizationServer).Create(&synchronizationCreateServer{stream})
}

type Synchronization_CreateServer interface {
	Send(*CreateResponse) error
	Recv() (*CreateRequest, error)
	grpc.ServerStream
}

type synchronizationCreateServer struct {
	grpc.ServerStream
}

func (x *synchronizationCreateServer) Send(m *CreateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *synchronizationCreateServer) Recv() (*CreateRequest, error) {
	m := new(CreateRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Synchronization_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SynchronizationServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/synchronization.Synchronization/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SynchronizationServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Synchronization_Flush_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SynchronizationServer).Flush(&synchronizationFlushServer{stream})
}

type Synchronization_FlushServer interface {
	Send(*FlushResponse) error
	Recv() (*FlushRequest, error)
	grpc.ServerStream
}

type synchronizationFlushServer struct {
	grpc.ServerStream
}

func (x *synchronizationFlushServer) Send(m *FlushResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *synchronizationFlushServer) Recv() (*FlushRequest, error) {
	m := new(FlushRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Synchronization_Pause_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SynchronizationServer).Pause(&synchronizationPauseServer{stream})
}

type Synchronization_PauseServer interface {
	Send(*PauseResponse) error
	Recv() (*PauseRequest, error)
	grpc.ServerStream
}

type synchronizationPauseServer struct {
	grpc.ServerStream
}

func (x *synchronizationPauseServer) Send(m *PauseResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *synchronizationPauseServer) Recv() (*PauseRequest, error) {
	m := new(PauseRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Synchronization_Resume_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SynchronizationServer).Resume(&synchronizationResumeServer{stream})
}

type Synchronization_ResumeServer interface {
	Send(*ResumeResponse) error
	Recv() (*ResumeRequest, error)
	grpc.ServerStream
}

type synchronizationResumeServer struct {
	grpc.ServerStream
}

func (x *synchronizationResumeServer) Send(m *ResumeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *synchronizationResumeServer) Recv() (*ResumeRequest, error) {
	m := new(ResumeRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Synchronization_Reset_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SynchronizationServer).Reset(&synchronizationResetServer{stream})
}

type Synchronization_ResetServer interface {
	Send(*ResetResponse) error
	Recv() (*ResetRequest, error)
	grpc.ServerStream
}

type synchronizationResetServer struct {
	grpc.ServerStream
}

func (x *synchronizationResetServer) Send(m *ResetResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *synchronizationResetServer) Recv() (*ResetRequest, error) {
	m := new(ResetRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Synchronization_Terminate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SynchronizationServer).Terminate(&synchronizationTerminateServer{stream})
}

type Synchronization_TerminateServer interface {
	Send(*TerminateResponse) error
	Recv() (*TerminateRequest, error)
	grpc.ServerStream
}

type synchronizationTerminateServer struct {
	grpc.ServerStream
}

func (x *synchronizationTerminateServer) Send(m *TerminateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *synchronizationTerminateServer) Recv() (*TerminateRequest, error) {
	m := new(TerminateRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Synchronization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "synchronization.Synchronization",
	HandlerType: (*SynchronizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Synchronization_List_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Create",
			Handler:       _Synchronization_Create_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Flush",
			Handler:       _Synchronization_Flush_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Pause",
			Handler:       _Synchronization_Pause_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Resume",
			Handler:       _Synchronization_Resume_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Reset",
			Handler:       _Synchronization_Reset_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Terminate",
			Handler:       _Synchronization_Terminate_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "service/synchronization/synchronization.proto",
}
